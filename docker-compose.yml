version: '3'

services:

  ca_auth:
    image: charanleads/ca_auth:latest
    # build:
    #   context: ./auth
    #   dockerfile: Dockerfile
    container_name: ca_auth
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - ca_auth_db
    networks:
      - my_network

  ca_auth_db:
    image: postgres:latest
    container_name: ca_auth_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ca_auth
      POSTGRES_USER: thecharancj
      POSTGRES_PASSWORD: TheCharanCJ123
    networks:
      - my_network

  ca_backend:
    image: charanleads/ca_backend:latest
    # build:
    #   context: ./server
    #   dockerfile: Dockerfile
    container_name: ca_backend
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - ca_auth
      - redis
    env_file:
      - .env
    networks:
      - my_network

  ca_backend_db:
    image: postgres:latest
    container_name: ca_backend_db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ca_backend
      POSTGRES_USER: thecharancj
      POSTGRES_PASSWORD: TheCharanCJ123
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network

  celery_worker:
    image: charanleads/ca_backend:latest
    container_name: celery_worker
    command: celery -A app.celery_app:app worker -l info
    restart: always
    env_file:
      - .env
    depends_on:
      - ca_backend
      - redis
    networks:
      - my_network

  celery_beat:
    image: charanleads/ca_backend:latest
    container_name: celery_beat
    command: celery -A app.celery_app:app beat --loglevel=info
    restart: always
    env_file:
      - .env
    depends_on:
      - ca_backend
      - redis
    networks:
      - my_network

  krakend:
    image: devopsfaith/krakend:watch
    container_name: krakend
    ports:
      - "8000:8080"
    volumes:
      - ./gateway/krakend/krakend.json:/etc/krakend/krakend.json
    command: ["run", "-dc", "krakend.json"]
    restart: always
    depends_on:
      - ca_auth
      - ca_backend
    networks:
      - my_network

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    depends_on:
      - krakend
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
